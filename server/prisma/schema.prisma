// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  username    String?
  password    String
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  avatart     String?
  Post        Post[]   @relation("WrittenPosts")
  favoretPost Post[]   @relation("FavoretPosts")
  Profile     Profile?
}

model Profile {
  id       String  @id @default(uuid())
  bio      String?
  emailUpd Boolean @default(false)
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique
}

model Post {
  id          String     @id @default(uuid())
  title       String
  content     String
  published   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  image       String?
  author      User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId    String
  favoretBy   User?      @relation("FavoretPosts", fields: [favoretById], references: [id])
  favoretById String
  Category    Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
